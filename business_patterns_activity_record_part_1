This .txt file describes the initial steps I took to obtain, clean, and begin analyzing 
some public data on county-wide business patterns, restricting my focus to New York 
State. In further updates, I will commit an R script that does these things and more. 
In particular, I will also look at other years besides 2016, to see trends that emerge.
The point of this version is simply to develop the protocol for obtaining the data
and preparing it for analysis.


0. I created a file to store my data and navigated to that file from the command line. 
	eric@pepper:~/projects$ sudo mkdir county_business_patterns_ny
	eric@pepper:~/projects$ cd county_business_patterns_ny/
	eric@pepper:~/projects/county_business_patterns_ny$ sudo mkdir aff_download
	eric@pepper:~/projects/county_business_patterns_ny$ cd aff_download

1. I opened sqlite3 from the command line and created a database called business_patterns. 
	eric@pepper:~/projects/county_business_patterns_ny/aff_download$ sqlite3 
	business_patterns
	
2. I downloaded the data for 2016 from data.gov and imported it into sqlite3 into a table 
   called business_patterns_a1 (since there are two data files here, a1 and a3). Since these
   are csv files, it's very important to import them while in csv mode!

	sqlite> .mode csv
	sqlite> .import BP_2016_00A1_with_ann.csv business_patterns_a1

3. I inspected the readme, the first few lines of the tables, and also the metadata files.  

	sqlite> SELECT * FROM business_patterns_a1 LIMIT 10;

	...

	PRAGMA TABLE_INFO(business_patterns_a1);

	...

	sqlite> ALTER TABLE business_patterns_a1 RENAME TO bp_a1_old;
	sqlite> CREATE TABLE business_patterns_a1 (
		geographic_id_code TEXT,
		second_geog_id INT
		geographic_area_na TEXT,
		naics_business_typ TEXT,
		business_type TEXT,
		year INT,
		num_establishments INT,
		num_paid_employees TEXT,
		payroll_category_f TEXT,
		annual_payroll_cat TEXT);
 
	sqlite> INSERT INTO business_patterns_a1 (...)
		SELECT ...
		FROM bp_a1_old;

	sqlite> DROP TABLE bp_a1_old;

4. Seeing that some of the data on number of employees was binned, I created a separate, 
   small table called 'emp_avgs' containing the average for each bin. The plan being to 
   impute to each entry whose employee number is a bin the average for that bin.

	sqlite> CREATE TABLE emp_avgs (code TEXT, avg INTEGER);
	sqlite> INSERT INTO emp_avgs (code, avg) VALUES ('a', 9.5);
		...

   Because the number of bins was small, I calculated the averages and built emp_avgs
   manually. But this would be easy to automate, either in R or SQL.

5. To avoid making changes to the original data, I copied business_patterns_a1 to a separate
   table called "imputed": 

	sqlite> CREATE TABLE imputed AS SELECT ... FROM business_patterns_a1 INNER JOIN emp_avgs
		ON annual_payroll_category = code WHERE naics_business_type != '00';

   (Here I used a WHERE clause to cut out rows that contained county-wide summary data. If 
   needed, this data can be recovered easily since it's still in business_patterns_a1.)

6. In the 'num_paid_employees_category' variable of imputed, I imputed to each entry whose 
   employee number is a bin category (a - j) the average for that bin, using an UPDATE call:

	sqlite> UPDATE imputed SET num_paid_employees_category = avg WHERE avg LIKE '%.5';

7. In the annual_payroll_category variable I tried to replace 'D' (meaning, "withheld to 
   preserve business anonymity") with NULL: 

	sqlite> UPDATE imputed SET annual_payroll_category = CAST(annual_payroll_category as 
	integer);
	
   However, when I checked, this didn't work: 

	PRAGMA TABLE_INFO(imputed);

	name                type
	------------------  ----------
	annual_payroll_cat  TEXT

  I found that one could fix the problem this way: 

	sqlite> CREATE TABLE imputed_int (...annual_payroll_cat INTEGER...);
	sqlite> INSERT INTO imputed_int SELECT ..., CAST(annual_payroll_cat AS INT) FROM imputed;
  
  But, I decided to switch back to R and do the rest in R, since that will enable me to 
  deliver more quickly on this project.

	sqlite> .quit


9. I opened an R session and built a connection to the database in R and checked that we have 
   access to all our tables:

	eric@pepper:~/projects/county_business_patterns_ny/aff_download$ /usr/bin/R
	> library(DBI)
	> con <- dbConnect(RSQLite::SQLite(), dbname = "business_patterns")
	> dbListTables(con)
	[1] "business_patterns_a1" "emp_avgs"             "imputed"

   Success!

10. I coerced num_paid_employees_category and annual_payroll_category to numeric and checked that 
    it worked:
	
	> imputed$annual_payroll_category <- as.numeric(imputed$annual_payroll_category)
	> imputed$num_paid_employees_category <- as.numeric(imputed$num_paid_employees_category)
	> summary(imputed)
	 num_paid_employees_category annual_payroll_category
	 Min.   :     0.0            Min.   :      14       
	 1st Qu.:     9.5            1st Qu.:    1157       
	 Median :    59.5            Median :    4170       
	 Mean   :   613.3            Mean   :   66300       
	 3rd Qu.:   176.0            3rd Qu.:   16763       
	 Max.   :326941.0            Max.   :85661284       
                                     NA's   :29208 

    Success! Though note: that's a lot of NA's for annual_payroll_category. Also, from this point on,
    annual_payroll_category should be called annual_payroll, but I had trouble with this so I'll leave
    it for now.

11. I coerced geographic_area_name and business_type to factors:

	> imputed$geographic_area_name <- as.factor(imputed$geographic_area_name)
	> imputed$business_type <- as.factor(imputed$business_type)

12. I wrote code that creates tables of the top 5 each, by county, of:

    Employers (in number of paid employees): 
	> top_5_employers_by_co <- imputed %>% group_by(geographic_area_name) %>% 
	  top_n(5, num_paid_employees_category) %>% select(geographic_area_name, 
	  business_type, num_paid_employees_category, year)

    Number of establishments:
	> top_5_employers_by_co <- imputed %>% group_by(geographic_area_name) %>% 
	  top_n(5, num_establishments) %>% select(geographic_area_name, 
	  business_type, num_establishments, year)

    Annual payroll:
	> top_5_annual_payroll <- imputed %>% group_by(geographic_area_name) %>% 
	  top_n(5, annual_payroll_category) %>% select(geographic_area_name, 
	  business_type, annual_payroll_category, year)


13. This already gives us some interesting results: 


	> top_5_annual_payroll %>% filter(grepl("Tompkins",geographic_area_name))
	# A tibble: 5 x 4
	# Groups:   geographic_area_name [1]
	  geographic_area_name  business_type                  annual_payroll_cat…  year
	  <fct>                 <fct>                                        <dbl> <int>
	1 Tompkins County, New… Manufacturing                               144130  2016
	2 Tompkins County, New… Retail trade                                118720  2016
	3 Tompkins County, New… Professional, scientific, and…              101085  2016
	4 Tompkins County, New… Professional, scientific, and…              101085  2016
	5 Tompkins County, New… Health care and social assist…              238921  2016

	> top_5_annual_payroll %>% filter(grepl("Albany",geographic_area_name))
	# A tibble: 5 x 4
	# Groups:   geographic_area_name [1]
	  geographic_area_name business_type                   annual_payroll_cat…  year
	  <fct>                <fct>                                         <dbl> <int>
	1 Albany County, New … Finance and insurance                       1006004  2016
	2 Albany County, New … Professional, scientific, and …             1246758  2016
	3 Albany County, New … Professional, scientific, and …             1246758  2016
	4 Albany County, New … Health care and social assista…             1688031  2016
	5 Albany County, New … Hospitals                                    677160  2016

	> top_5_employers_by_co %>% filter(grepl("Albany",geographic_area_name))
	# A tibble: 5 x 4
	# Groups:   geographic_area_name [1]
	  geographic_area_name business_type                 num_paid_employees_c…  year
	  <fct>                <fct>                                         <dbl> <int>
	1 Albany County, New … Retail trade                                  23209  2016
	2 Albany County, New … Professional, scientific, an…                 17601  2016
	3 Albany County, New … Professional, scientific, an…                 17601  2016
	4 Albany County, New … Health care and social assis…                 36785  2016
	5 Albany County, New … Accommodation and food servi…                 16779  2016

    So, it looks like Finance and Insurance is at the top for annual payroll in Albany, 
    but retail trade and professional, scientific, and technical services employ more people. 


To be continued...


TO DO: 

1. Find database that links geographic codes to latitude & longitude coordinates, then join to obtain 
   latitude & longitude for each business, so we can automate analysis of industry trends by location.
2. Use caret package in R and use it to do some clustering on the data and see what we find. 

